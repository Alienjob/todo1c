Перем ЮТест; // ссылка на экземпляр фреймворка xUnitFor1C - объект обработки UnitTestRunner

Перем ОбработкаОбъект;
Перем ИмяФайлаВнешнейОбработки;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

    	ЮТест = ЮнитТестирование;

    	ВсеТесты = Новый Массив;

    	ВсеТесты.Добавить("ТестДолжен_СложитьДваИДва");
    	ВсеТесты.Добавить("ТестДолжен_ДобавитьЗадачу");
	ВсеТесты.Добавить("ТестДолжен_ВыполнитьЗадачу");
	ВсеТесты.Добавить("ТестДолжен_СохранитьЗадачи");
	ВсеТесты.Добавить("ТестДолжен_ПрочитатьЗадачи");

    Возврат ВсеТесты;

КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	ОбработкаОбъект = ВнешниеОбработки.Создать(ИмяФайлаВнешнейОбработки);
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
  	ОбработкаОбъект = Неопределено;
КонецПроцедуры

Процедура ТестДолжен_СложитьДваИДва() Экспорт
    ЮТест.ПроверитьРавенство(2 + 2, 4, "2 + 2, 4");
КонецПроцедуры

/////////////////////////////////////////////////////////
//Служебные процедуры

//Создает тестовый набор данных используя методы обработки
Процедура СоздатьТестовыеДанные()
	
    ОбработкаОбъект.ДобавитьЗадачу("раз задача");	
    ОбработкаОбъект.ДобавитьЗадачу("два задача");	
    
КонецПроцедуры

//Незаввисимо от обработки записывает тестовый набор данных в базу
Процедура ЗаписатьТестовыеДанные()
	
	НЗ = РегистрыСведений.Задачи.СоздатьНаборЗаписей();
	
	Запись1 = НЗ.Добавить();
	Запись1.id = Новый УникальныйИдентификатор;
	Запись1.Выполнена = Ложь;
	Запись1.Текст = "Раз задача";
	
	Запись2 = НЗ.Добавить();
	Запись2.id = Новый УникальныйИдентификатор;
	Запись2.Выполнена = Истина;
	Запись2.Текст = "Два задача";
	
	НЗ.Записать();
	
КонецПроцедуры
 
/////////////////////////////////////////////////////////
//Здесь будем писать наши тесты

Процедура ТестДолжен_ДобавитьЗадачу() Экспорт
	
    ОбработкаОбъект.ДобавитьЗадачу("Пройти первый тест");	
    
    ЮТест.ПроверитьРавенство(ОбработкаОбъект.СписокЗадач.Количество(), 1, "Задача не добавлена");
	
КонецПроцедуры

Процедура ТестДолжен_ВыполнитьЗадачу() Экспорт
	
    ОбработкаОбъект.ДобавитьЗадачу("Пройти второй тест");	
    
    ЮТест.ПроверитьРавенство(ОбработкаОбъект.СписокЗадач[0].Выполнена, Ложь, "Задача создана выполненной");
    
    ОбработкаОбъект.ВыполнитьЗадачу(0);	
    
    ЮТест.ПроверитьРавенство(ОбработкаОбъект.СписокЗадач[0].Выполнена, Истина, "Задача не выполнена");
	
КонецПроцедуры

Процедура ТестДолжен_СохранитьЗадачи() Экспорт
	
	СоздатьТестовыеДанные();
	
    ОбработкаОбъект.СохранитьЗадачи();	
    
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |	Задачи.id,
    |	Задачи.Выполнена,
    |	Задачи.Текст
    |ИЗ
    |	РегистрСведений.Задачи КАК Задачи";
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    ЮТест.ПроверитьРавенство(Выборка.Количество(), 2, "Задачи не сохранены");
	
КонецПроцедуры

Процедура ТестДолжен_ПрочитатьЗадачи() Экспорт
	
	ЗаписатьТестовыеДанные();
	
    ОбработкаОбъект.ПрочитатьЗадачи();	
    
    ЮТест.ПроверитьРавенство(ОбработкаОбъект.СписокЗадач.Количество(), 2, "Задачи не сохранены");
	
КонецПроцедуры

ИмяФайлаВнешнейОбработки = "E:\todo1c\develop\epf\todo1c.epf";